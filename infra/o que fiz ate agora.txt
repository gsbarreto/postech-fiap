Docker:
1- Criei uma imagem do MongoDB com script de criação inicial do nosso banco e os dados
2- Criei uma imagem da app node
3- Subi as duas imagens pro meu dockerhub

Kubernetes:
1- Criei um configMap com env's da app
2- Criei um configMap com env's do Mongo Express
3- Criei um pvc para o Mongo
4- Criei um StatefulSet com 1 replica e um svc (ClusterIP) do banco
5- Criei um deployment com 3 replicas e um svc (NodePort) da app
6- Criei um deployment com 1 replica e um svc (NodePort) do Mongo Express (não precisou criar uma imagem pois é padrão só com variáveis de ambiente)
7- Criei um componente de métricas para acompanhar o consumo de CPU para o HPA
8- Criei um HPA


Roteiro para o teste (Habilitar o Kubernetes no Docker Desktop no Windows ou instalar o Minikube no Linux):

1- Criar as configMap App e Mongo Express
kubectl apply -f .\app-configmap.yaml
kubectl apply -f .\mongo-express-configmap.yaml

2- Criar o PVC 
kubectl apply -f .\mongodb-pvc.yaml

3- Criar o POD do Mongo 
kubectl apply -f .\mongodb-statefulset.yaml

4- Criar o Service do Mongo
kubectl apply -f .\mongodb-svc.yaml

5- Criar o POD do Mongo Express
kubectl apply -f .\mongo-express-deployment.yaml

6- Criar o Service do Mongo Express
kubectl apply -f .\mongo-express-svc.yml

7- Testar o Mongo Express (http://localhost:30300/  - admin/pass)

8- Criar o POD da APP Node
kubectl apply -f .\app-deployment.yaml

9- Criar o Service da APP Node
kubectl apply -f .\app-svc.yaml

10- Testar a APP Node (http://localhost:30100/product)

11- Criar o component para as métricas - HPA
kubectl apply -f .\component-metric.yaml

12- Criar o HPA da APP
kubectl apply -f .\app-hpa.yaml



